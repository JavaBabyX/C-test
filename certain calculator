#include <cs50.h>
#include <ctype.h>
#include <stdio.h>
#include <string.h>

// a reading levegrader based on the American Coleman-Liau's index
int main(void)
{
    //index = 0.0588 - L(average of letters in Exist words, in text*100 )-0.296 * S(sentences per Exist words in text*100) -15.8
    //isalpha == letter      . ? ! is sentence      isspace is word

    char text[1999];
    printf("text: ");
    fgets(text, sizeof(text), stdin);
    text[strcspn(text, "\n")] = '\0';

    //get index
    int calc_index(string text);
    int index = calc_index(text);

    if (index < 1)
    {
        printf("Before Grade 1\n");
    }
    else if (index > 16)
    {
        printf("Grade 16+\n");
    }
    else
    {
        printf("Grade %i\n", index);
    }

    return 0;
}

int calc_index(string text)
{
    float W = 0;
    float S = 0;
    float L = 0;

    //calculate words
    for (int i = 0; text[i] != '\0'; i++)
    {
        if isspace(text[i])
        {
        W++;
        }
    }

    // SENTECNCES
    for (int i = 0; text[i] != '\0'; i++)
    {
        if (ispunct(text[i]) && (text[i] == '!' || text[i] == '?' || text[i] == '.'))
        {
            S++;
        }
    }

    // Letters
    int textlen;
    textlen = (int)strlen(text);
    for (int i = 0; i < textlen; i++)
    {
        if isalpha(text[i])
        {
            L++;
        }
    }

    //grade //round after
    float Sn = S / W * 100.0;
    float Ln = L / W * 100.0;
    float grade = 0.0588 * (int)Ln - 0.296 * (int)Sn - 15.8;
    int gradeint = (int)grade;
    return gradeint;
}


